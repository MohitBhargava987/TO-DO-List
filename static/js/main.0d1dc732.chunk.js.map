{"version":3,"sources":["components/todoreact/todo.js","App.js","index.js"],"names":["Todo","useState","inputData","setInputData","lists","localStorage","getItem","JSON","parse","getLocalStorage","items","setItems","isEditItem","setIsEditItem","toggleButton","setToggleButton","addItem","map","curElem","id","name","setItemTimeData","Date","getTime","toString","alert","useEffect","setItem","stringify","className","src","alt","type","placeholder","value","onChange","event","target","onClick","index","itemToBeEdited","find","editItem","updatedItems","filter","delItem","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iMAwIeA,EAzHF,WAET,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA0BF,mBAdN,WACpB,IAAMG,EAAQC,aAAaC,QAAQ,cACnC,OAAGF,EAEQG,KAAKC,MAAMJ,GAEX,GAQwBK,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAoCV,mBAAS,IAA7C,mBAAOW,EAAP,KAAmBC,EAAnB,KACA,EAAwCZ,oBAAS,GAAjD,mBAAOa,EAAP,KAAqBC,EAArB,KAGMC,EAAU,WACZ,GAAId,EAGC,GAAGA,GAAaY,EAEjBH,EACID,EAAMO,KAAI,SAACC,GACP,OAAGA,EAAQC,KAAOP,EACP,2BAAIM,GAAX,IAAoBE,KAAOlB,IAExBgB,MAGff,EAAa,IACbU,EAAc,IACdE,GAAgB,OAEhB,CACA,IAAMM,EAAkB,CACpBF,IAAK,IAAIG,MAAOC,UAAUC,WAC1BJ,KAAMlB,GAEVS,EAAS,GAAD,mBAAKD,GAAL,CAAYW,KACpBlB,EAAa,SAtBbsB,MAAM,mBAqDd,OAJAC,qBAAU,WACPrB,aAAasB,QAAQ,aAAcpB,KAAKqB,UAAUlB,MACnD,CAACA,IAGC,mCACA,qBAAKmB,UAAU,WAAf,SACI,sBAAKA,UAAU,YAAf,UACI,mCACI,qBAAKC,IAAI,oBAAoBC,IAAI,aACjC,sEAEJ,sBAAKF,UAAU,WAAf,UACI,uBAAOG,KAAK,OAAOC,YAAY,iBAC9BJ,UAAU,eACVK,MAAOhC,EACPiC,SAAU,SAACC,GAAD,OAASjC,EAAaiC,EAAMC,OAAOH,UAI1CpB,EACI,mBAAGe,UAAU,sBAAsBS,QAAStB,IAE5C,mBAAGa,UAAU,qBAAqBS,QAAStB,OAOvD,qBAAKa,UAAU,YAAf,SACCnB,EAAMO,KAAK,SAACC,EAASqB,GAClB,OACI,sBAAKV,UAAU,WAAf,UACI,6BAAKX,EAAQE,OACb,sBAAKS,UAAU,WAAf,UACI,mBAAGA,UAAU,sBACbS,QAAS,kBA5DpB,SAACC,GACd,IAAMC,EAAiB9B,EAAM+B,MAAK,SAACvB,GAC/B,OAAOA,EAAQC,KAAOoB,KAE1BpC,EAAaqC,EAAepB,MAC5BP,EAAc0B,GACdxB,GAAgB,GAsDsB2B,CAASxB,EAAQC,OAC/B,mBAAGU,UAAU,6BACbS,QAAS,kBApDpB,SAACC,GACb,IAAMI,EAAejC,EAAMkC,QAAO,SAAC1B,GAC/B,OAAOA,EAAQC,KAAOoB,KAE1B5B,EAASgC,GAgD4BE,CAAQ3B,EAAQC,YANPD,EAAQC,SAiB/C,qBAAKU,UAAU,YAAf,SACI,wBAAQA,UAAU,eAAe,oBAAkB,aACnDS,QAzDG,WACd3B,EAAS,KAuDE,SAEI,0DCpHTmC,MARf,WACE,OACC,mCACA,cAAC,EAAD,OCFHC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.0d1dc732.chunk.js","sourcesContent":["import React, {useState,useEffect} from 'react';\r\nimport './style.css';\r\n\r\n\r\nconst getLocalStorage = () =>{\r\n    const lists = localStorage.getItem(\"mytodolist\");\r\n    if(lists)\r\n    {\r\n        return JSON.parse(lists);\r\n    }else{\r\n        return [];\r\n    }\r\n};\r\n\r\n\r\nconst Todo = () => {\r\n\r\n    const [inputData, setInputData] = useState(\"\");\r\n    const [items, setItems] = useState(getLocalStorage());\r\n    const [isEditItem, setIsEditItem] = useState(\"\");\r\n    const [toggleButton, setToggleButton] = useState(false);\r\n\r\n    //add the items function\r\n    const addItem = ()=>{\r\n        if(!inputData){\r\n            alert(\"Fill some data\");\r\n        }\r\n        else if(inputData && toggleButton)\r\n        {\r\n            setItems(\r\n                items.map((curElem)=>{\r\n                    if(curElem.id === isEditItem){\r\n                        return {...curElem, name : inputData};\r\n                    }\r\n                    return curElem;\r\n                })\r\n            );\r\n            setInputData(\"\");\r\n            setIsEditItem(\"\");\r\n            setToggleButton(false);\r\n        }\r\n        else{\r\n            const setItemTimeData = {\r\n                id : new Date().getTime().toString(),\r\n                name: inputData,\r\n            }\r\n            setItems([...items, setItemTimeData]);\r\n            setInputData(\"\");\r\n        }\r\n    };\r\n    //edit the items\r\n    const editItem = (index)=>{\r\n        const itemToBeEdited = items.find((curElem)=>{\r\n            return curElem.id === index;\r\n        });\r\n        setInputData(itemToBeEdited.name);\r\n        setIsEditItem(index);\r\n        setToggleButton(true);\r\n    }\r\n\r\n    //delete the items function\r\n     const delItem = (index)=>{\r\n         const updatedItems = items.filter((curElem)=>{\r\n             return curElem.id !== index;\r\n         });\r\n         setItems(updatedItems);\r\n     };\r\n\r\n    //remove all the items\r\n     const removeAll = ()=>{\r\n         setItems([]);\r\n     };\r\n\r\n    //adding localstorage\r\n    useEffect(() => {\r\n       localStorage.setItem(\"mytodolist\", JSON.stringify(items));\r\n    },[items]) \r\n\r\n    return (\r\n        <>\r\n        <div className=\"main-div\">\r\n            <div className=\"child-div\">\r\n                <figure>\r\n                    <img src=\"./images/todo.svg\" alt=\"todologo\" />\r\n                    <figcaption>Add your List Here ✌</figcaption>\r\n                </figure>\r\n                <div className=\"addItems\">\r\n                    <input type=\"text\" placeholder=\"✍Add Item\"\r\n                     className=\"form-control\"\r\n                     value={inputData}\r\n                     onChange={(event)=>setInputData(event.target.value)} \r\n                    />\r\n                    \r\n                    {\r\n                        toggleButton ?(\r\n                            <i className=\"far fa-edit add-btn\" onClick={addItem}></i>\r\n                        ):(\r\n                            <i className=\"fa fa-plus add-btn\" onClick={addItem}></i>\r\n                        )}\r\n                </div>\r\n\r\n\r\n                {/* show our items */}\r\n\r\n                <div className=\"showItems\">\r\n                {items.map( (curElem, index) =>{\r\n                    return (\r\n                        <div className=\"eachItem\" key={curElem.id}>\r\n                            <h3>{curElem.name}</h3>\r\n                            <div className=\"todo-btn\">\r\n                                <i className=\"far fa-edit add-btn\"\r\n                                onClick={()=> editItem(curElem.id)}></i>\r\n                                <i className=\"far fa-trash-alt   add-btn\" \r\n                                onClick={()=> delItem(curElem.id)}></i>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                })}\r\n                </div>\r\n\r\n            \r\n\r\n\r\n                {/* Remove  all Items */}\r\n                <div className=\"showItems\">\r\n                    <button className=\"btn effect04\" data-sm-link-text=\"Remove All\"\r\n                    onClick={removeAll}>\r\n                        <span>Check List</span>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Todo;\r\n","import react from \"react\";\nimport Todo from \"./components/todoreact/todo\";\n\nfunction App() {\n  return (\n   <>\n   <Todo></Todo>\n   </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}